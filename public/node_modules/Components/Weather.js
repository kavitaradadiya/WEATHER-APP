import React, { Component } from 'react'
import Search from './Search'
import Result from './Result'
import axios from 'axios'
import Recent from './Recent'
// import Loader from './Loader'

export class Weather extends Component {
  constructor() {
    super()

    this.state = {
      city: "",
      lat: "",
      lon: "",
      weatherData: null,
      loading:false,
      recent: []
    }
  }

  inputChangeHandler = (e) => {
    console.log(e.target.name);
    const name = e.target.name

    if(name === "city"){
      this.setState({
        city: e.target.value
      })
    }else if(name === "lat"){
      this.setState({
        lat: e.target.value
      })
    }else if(name === "lon"){
      this.setState({
        lon: e.target.value
      })
    }else{
      console.log("not valid");
    }
  }

  searchHandler =(e) => {
    e.preventDefault();
    // alert("fhg")
    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.lon}&appid=c296989324d367f389749f3db62d7bff`).then((res) =>{
      console.log(res);
      this.setState({
        city:res.data.name,
        weatherData: res.data
      },() =>{ 
        this.recentDataHandler()
      })
    }).catch((err) => {
      console.log(err);
    })
  }


  locationHandler = (e) =>{
    // alert("kavita")
    e.preventDefault();
    this.setState({
      loading:true
    })

    if(navigator.geolocation){
      navigator.geolocation.getCurrentPosition((res) =>{
        setTimeout(()=>{
          this.setState({
            lat : res.coords.latitude,
            lon: res.coords.longitude
          })
          const { latitude, longitude} = res.coords
          axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=c296989324d367f389749f3db62d7bff`)
          .then((res) => {
            this.setState({
              city: res.data.name,
              weatherData: res.data,
              loading: false
        
            },() => {
              this.recentDataHandler()
            })
          }).catch((err) => {
            console.log(err);
          })
        },2000)
      },
      (err) =>{
        console.log(err);
      }
      )
    }else{
      console.log("Geolocation not Support...");
    }
  }

 recentDataHandler = () => {
  const Recent = this.state.recent
  console.log(Recent);
  Recent.push({
    city: this.state.city,
    lat: this.state.lat,
    lon: this.state.lon
  })
  this.setState({
    Recent
  })
 }

 researchHandler=(lat,lon)=>{
  // alert("hj")
  axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=c296989324d367f389749f3db62d7bff`)
    .then((res) => {
      this.setState({
        city: res.data.name,
        weatherData: res.data,
        lat: res.data.coord.lat,
        lon: res.data.coord.lon,
        loading: false
  
      })
    }).catch((err) => {
      console.log(err);
    })
 }

  render() {
    console.log(this.state);
    return (
      <div>
        <Search city={this.state.city} lat={this.state.lat} lon={this.state.lon} change={this.inputChangeHandler} location={this.locationHandler} search={this.searchHandler}></Search>
        <Result loading={this.state.loading} weatherData={this.state.weatherData}></Result>
        <Recent recent={this.state.recent} research ={this.researchHandler}></Recent>
      </div>
    )
  }
}

export default Weather